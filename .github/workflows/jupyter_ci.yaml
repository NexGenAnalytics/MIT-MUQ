name: Jupyter MUQ CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

concurrency:
  group: ${{ github.event.repository.name }}-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: True

jobs:
  CI:
    name: baseline
    continue-on-error: false
    strategy:
      fail-fast: true
      matrix:
        image:
          - ubuntu-2404-gnu-serial-jupyter
        build_type:
          - Release

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/nexgenanalytics/muqcontainers/${{ matrix.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}
    env:
      num_cpus: 2 # $(cat /proc/cpuinfo | grep processor -c)
      MUQ_HOME: ${{ github.workspace }}
      MUQ_BUILD_DIR: ${{ github.workspace }}/../muq_build
      MUQ_INSTALL_DIR: ${{ github.workspace }}/../muq_install
      TPL_PFX: /home/tpls

    steps:
      - uses: actions/checkout@v4

      - name: Check environment
        shell: bash
        run: |
          echo ======================================================
          echo $(which $CXX) --version
          $CXX --version
          echo ======================================================
          echo $(which cmake) --version
          cmake --version
          echo ======================================================
          echo $(which python) --version
          python --version
          echo ======================================================
          echo Source directory: $MUQ_HOME
          echo TPLs pfx: $TPL_PFX
          echo ======================================================

      - name: Build and test
        shell: bash
        run: |
          rm -rf $MUQ_BUILD_DIR
          cmake -DCMAKE_C_COMPILER=$CC \
                -DCMAKE_CXX_COMPILER=$CXX \
                -D CMAKE_BUILD_TYPE:STRING=${{ matrix.build_type }} \
                -S $MUQ_HOME -B $MUQ_BUILD_DIR \
                -DCMAKE_INSTALL_PREFIX=$MUQ_INSTALL_DIR \
                -C $TPL_PFX/tpls_cache.txt \
                -DMUQ_USE_GTEST=ON \
                -DMUQ_ENABLEGROUP_DEFAULT=ON \
                -DMUQ_USE_PYTHON=ON

          cd $MUQ_BUILD_DIR
          make -j${num_cpus} install

          export PYTHONPATH=$PYTHONPATH:$MUQ_INSTALL_DIR/python/:$MUQ_INSTALL_DIR/lib

          cd $MUQ_HOME
          ./RunAllNotebooks.sh
