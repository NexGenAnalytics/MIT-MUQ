# This is a basic workflow to help you get started with Actions

name: Build and deploy docs

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [master]

  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    if: "!contains(github.event.head_commit.message, 'build_doc')"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/nexgenanalytics/muqcontainers/ubuntu-2404-gnu-11-serial
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}

    env:
      num_cpus: 2 # $(cat /proc/cpuinfo | grep processor -c)
      MUQ_HOME: ${{ github.workspace }}
      MUQ_BUILD_DIR: ${{ github.workspace }}/../muq_build
      MUQ_INSTALL_DIR: ${{ github.workspace }}/../muq_install
      TPL_PFX: /home/tpls

    steps:
      - uses: actions/checkout@v4

      - name: Build website with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: website/source/
          destination: website/source/_site/

      - name: Configure default groups and build Doxygen
        shell: bash
        run: |
          rm -rf $MUQ_BUILD_DIR
          cmake -DCMAKE_C_COMPILER=$CC \
                -DCMAKE_CXX_COMPILER=$CXX \
                -D CMAKE_BUILD_TYPE:STRING=Release \
                -S $MUQ_HOME -B $MUQ_BUILD_DIR \
                -DCMAKE_INSTALL_PREFIX=$MUQ_INSTALL_DIR \
                -C $TPL_PFX/tpls_cache.txt \
                -DMUQ_USE_GTEST=ON \
                -DMUQ_ENABLEGROUP_DEFAULT=ON \
                -DMUQ_USE_PYTHON=ON
          cd $MUQ_BUILD_DIR
          make doc
          cd -
          mkdir $MUQ_HOME/website/source/_site/latest
          mv -f $MUQ_BUILD_DIR/doxygen_output/html/* $MUQ_HOME/website/source/_site/latest

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: /__w/MIT-MUQ/MIT-MUQ/website/source/_site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
